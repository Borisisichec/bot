
import random
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥–∞–¥–∫–∏ —Å —É—Ä–æ–≤–Ω—è–º–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
riddles = {
    "easy": [
        {
            "question": "–ß—Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏?",
            "options": ["–°–æ–Ω", "–¢–µ–Ω—å", "–ú–µ—á—Ç—É"],
            "answer": "–°–æ–Ω"
        },
        {
            "question": "–ó–∏–º–æ–π –∏ –ª–µ—Ç–æ–º –æ–¥–Ω–∏–º —Ü–≤–µ—Ç–æ–º. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–Å–ª–∫–∞", "–¢—Ä–∞–≤–∞", "–õ–∏—Å—Ç"],
            "answer": "–Å–ª–∫–∞"
        },
        {
            "question": "–ß—Ç–æ –Ω–µ–ª—å–∑—è —Å—ä–µ—Å—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫?",
            "options": ["–û–±–µ–¥", "–Ø–±–ª–æ–∫–æ", "–°—É–ø"],
            "answer": "–û–±–µ–¥"
        },
        {
            "question": "–ß—Ç–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–∞–º, –Ω–æ –¥—Ä—É–≥–∏–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —á–∞—â–µ, —á–µ–º –≤—ã?",
            "options": ["–ò–º—è", "–†–µ—á—å", "–ö–ª—é—á"],
            "answer": "–ò–º—è"
        },
        {
            "question": "–ö–∞–∫–∞—è –≤–µ—â—å –Ω—É–∂–Ω–∞ –≤–∞–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ—ë –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ?",
            "options": ["–ó–µ—Ä–∫–∞–ª–æ", "–í–æ–¥–∞", "–°—Ç–µ–∫–ª–æ"],
            "answer": "–ó–µ—Ä–∫–∞–ª–æ"
        },
        {
            "question": "–ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º–æ–∫—Ä—ã–º, –∫–æ–≥–¥–∞ —Å—É—à–∏—Ç?",
            "options": ["–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ", "–î–æ–∂–¥—å", "–°–Ω–µ–≥"],
            "answer": "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ"
        },
        {
            "question": "–ß—Ç–æ –Ω–µ –∏–º–µ–µ—Ç –Ω–∞—á–∞–ª–∞, –∫–æ–Ω—Ü–∞ –∏–ª–∏ —Å–µ—Ä–µ–¥–∏–Ω—ã?",
            "options": ["–ö—Ä—É–≥", "–õ–∏–Ω–∏—è", "–í–µ—á–Ω–æ—Å—Ç—å"],
            "answer": "–ö—Ä—É–≥"
        },
        {
            "question": "–û–Ω–æ —Ö–æ–¥–∏—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–ß–∞—Å—ã", "–í—Ä–µ–º—è", "–¢–µ–Ω—å"],
            "answer": "–ß–∞—Å—ã"
        },
    ],
    "medium": [
        {
            "question": "–ß—Ç–æ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥ –Ω–∞–º–∏, –Ω–æ –º—ã –µ–≥–æ –Ω–µ –≤–∏–¥–∏–º?",
            "options": ["–ë—É–¥—É—â–µ–µ", "–°–æ–ª–Ω—Ü–µ", "–ù–æ—á—å"],
            "answer": "–ë—É–¥—É—â–µ–µ"
        },
        {
            "question": "–ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ, –µ—Å–ª–∏ –∏–∑ –Ω–µ–≥–æ –±—Ä–∞—Ç—å?",
            "options": ["–Ø–º–∞", "–î—ã—Ä–∞", "–ö—É–±"],
            "answer": "–Ø–º–∞"
        },
        {
            "question": "–°—Ç–æ –æ–¥–µ–∂–µ–∫ –∏ –≤—Å–µ –±–µ–∑ –∑–∞—Å—Ç–µ–∂–µ–∫. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–ö–∞–ø—É—Å—Ç–∞", "–õ—É–∫", "–ö—É–∫—É—Ä—É–∑–∞"],
            "answer": "–ö–∞–ø—É—Å—Ç–∞"
        },
        {
            "question": "–ß—Ç–æ –º–æ–∂–Ω–æ —É–¥–µ—Ä–∂–∞—Ç—å, –Ω–µ —Ç—Ä–æ–≥–∞—è?",
            "options": ["–°–ª–æ–≤–æ", "–¢–µ–Ω—å", "–ú—ã—Å–ª—å"],
            "answer": "–°–ª–æ–≤–æ"
        },
        {
            "question": "–ß—Ç–æ –≤—Å–µ–≥–¥–∞ –∏–¥—ë—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç?",
            "options": ["–í—Ä–µ–º—è", "–¢–µ–Ω—å", "–ù–æ—á—å"],
            "answer": "–í—Ä–µ–º—è"
        },
        {
            "question": "–ß—Ç–æ –∂–∏–≤—ë—Ç —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –µ—Å—Ç?",
            "options": ["–û–≥–æ–Ω—å", "–ñ–∏–≤–æ—Ç–Ω–æ–µ", "–î–µ—Ä–µ–≤–æ"],
            "answer": "–û–≥–æ–Ω—å"
        },

    ],
    "hard": [
        {
            "question": "–ß–µ–º –±–æ–ª—å—à–µ –µ–µ —Å—Ç–∏—Ä–∞–µ—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–î–æ—Å–∫–∞", "–î—ã—Ä–∞", "–ü—è—Ç–Ω–æ"],
            "answer": "–î—ã—Ä–∞"
        },
        {
            "question": "–£ –∫–∞–∫–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤—Å–µ–≥–¥–∞ —Ö–æ–ª–æ–¥–Ω—ã–π –Ω–æ—Å?",
            "options": ["–°–æ–±–∞–∫–∞", "–ü–∏–Ω–≥–≤–∏–Ω", "–ö–æ—à–∫–∞"],
            "answer": "–°–æ–±–∞–∫–∞"
        },
        {
            "question": "–ß—Ç–æ –ø–∞–¥–∞–µ—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è?",
            "options": ["–î–æ–∂–¥—å", "–°–Ω–µ–≥", "–¢–µ–Ω—å"],
            "answer": "–î–æ–∂–¥—å"
        },
        {

            "question": "–ß—Ç–æ –ª–µ–≥—á–µ –≤–æ–¥—ã, –Ω–æ –Ω–µ —É–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –≤–µ–¥—Ä–µ?",
            "options": ["–í–æ–∑–¥—É—Ö", "–¢—É–º–∞–Ω", "–ü–µ–Ω–∞"],
            "answer": "–í–æ–∑–¥—É—Ö"
        },
        {
            "question": "–ß—Ç–æ –º–æ–∂–Ω–æ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑?",
            "options": ["–î—ã—Ö–∞–Ω–∏–µ", "–°–ª–æ–≤–æ", "–ú–≥–Ω–æ–≤–µ–Ω–∏–µ"],
            "answer": "–î—ã—Ö–∞–Ω–∏–µ"
        },
        {
            "question": "–ù–∞ –∫–∞–∫–æ–º –º–µ—Å—Ç–µ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏ –≤—ã –æ–∫–∞–∂–µ—Ç–µ—Å—å, –µ—Å–ª–∏ –æ–±–≥–æ–Ω–∏—Ç–µ —Ç–æ–≥–æ, –∫—Ç–æ –≤—Ç–æ—Ä–æ–π?",
            "options": ["–ü–µ—Ä–≤–æ–µ", "–í—Ç–æ—Ä–æ–µ", "–¢—Ä–µ—Ç—å–µ"],
            "answer": "–í—Ç–æ—Ä–æ–µ"
        },
        {
            "question": "–õ–µ—Ç–∏—Ç ‚Äî –º–æ–ª—á–∏—Ç, –ª–µ–∂–∏—Ç ‚Äî –º–æ–ª—á–∏—Ç, –∫–æ–≥–¥–∞ —É–º—Ä—ë—Ç ‚Äî –∫—Ä–∏—á–∏—Ç. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–°—Ç—Ä–µ–ª–∞", "–°–Ω–µ–≥", "–õ–∏—Å—Ç"],
            "answer": "–°–Ω–µ–≥"
        },
        {
            "question": "–ß—Ç–æ –∏–º–µ–µ—Ç –∑—É–±—ã, –Ω–æ –Ω–µ –∫—É—Å–∞–µ—Ç?",
            "options": ["–ü–∏–ª–∞", "–ì—Ä–µ–±–µ–Ω—å", "–í–∏–ª–∫–∞"],
            "answer": "–ì—Ä–µ–±–µ–Ω—å"
        },
        {
            "question": "–£ –∫–∞–∫–æ–≥–æ –º–µ—Å—è—Ü–∞ 28 –¥–Ω–µ–π?",
            "options": ["–§–µ–≤—Ä–∞–ª—å", "–í—Å–µ", "–Ø–Ω–≤–∞—Ä—å"],
            "answer": "–í—Å–µ"
        },
        {
            "question": "–≠—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ, –ø–æ–∫–∞ –Ω–µ —Å–ª–æ–º–∞–Ω–æ. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–Ø–π—Ü–æ", "–°–µ–∫—Ä–µ—Ç", "–ü–∞–∑–ª"],
            "answer": "–Ø–π—Ü–æ"
        },
        {
            "question": "–ß—Ç–æ —Ä–∞—Å—Ç—ë—Ç –≤–Ω–∏–∑ –≥–æ–ª–æ–≤–æ–π?",
            "options": ["–ö–æ—Ä–Ω–∏", "–ü–µ—â–µ—Ä–∞", "–õ–∞–≤–∏–Ω–∞"],
            "answer": "–ö–æ—Ä–Ω–∏"
        },
        {
            "question": "–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –ø–∏—à–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ –≤—Å–µ—Ö —Å–ª–æ–≤–∞—Ä—è—Ö?",
            "options": ["–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ", "–û—à–∏–±–æ—á–Ω–æ", "–°–ª–æ–≤–æ"],
            "answer": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        },
        {
            "question": "–Ø —Å—É—â–µ—Å—Ç–≤—É—é —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Å–≤–µ—Ç, –Ω–æ —è –∏—Å—á–µ–∑–∞—é, –µ—Å–ª–∏ —Å–≤–µ—Ç –º–µ–Ω—è –∫–∞—Å–∞–µ—Ç—Å—è. –ß—Ç–æ —è?",
            "options": ["–¢–µ–Ω—å", "–†–∞–¥—É–≥–∞", "–°–æ–Ω"],
            "answer": "–¢–µ–Ω—å"
        },
        {
            "question": "–ß—Ç–æ –≤—Å–µ–≥–¥–∞ –≤ –¥–≤–∏–∂–µ–Ω–∏–∏, –Ω–æ –Ω–µ –º–µ–Ω—è–µ—Ç —Å–≤–æ–µ–≥–æ –º–µ—Å—Ç–∞?",
            "options": ["–†–µ–∫–∞", "–í—Ä–µ–º—è", "–í–µ—Ç–µ—Ä"],
            "answer": "–†–µ–∫–∞"
        },
        {
            "question": "–ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–ª–∏–Ω–Ω–µ–µ, –∫–æ–≥–¥–∞ –µ–≥–æ —Ç—è–Ω—É—Ç—å, –Ω–æ –∫–æ—Ä–æ—á–µ, –∫–æ–≥–¥–∞ –µ–≥–æ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç?",
            "options": ["–†–µ–∑–∏–Ω–∫–∞", "–†—É–ª–µ—Ç–∫–∞", "–®–Ω—É—Ä"],
            "answer": "–†–µ–∑–∏–Ω–∫–∞"
        },
        {
            "question": "–ß—Ç–æ –º–æ–∂–µ—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ –º–∏—Ä—É, –æ—Å—Ç–∞–≤–∞—è—Å—å –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ —É–≥–ª—É?",
            "options": ["–ú–∞—Ä–∫–∞", "–ö–∞—Ä—Ç–∞", "–ü–∏—Å—å–º–æ"],
            "answer": "–ú–∞—Ä–∫–∞"
        },
        {
            "question": "–ß–µ–º –±–æ–ª—å—à–µ —Ç—ã –±–µ—Ä—ë—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –æ—Å—Ç–∞–≤–ª—è–µ—à—å. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–®–∞–≥–∏", "–î–æ–ª–≥", "–ü–µ—Å–æ–∫"],
            "answer": "–®–∞–≥–∏"
        },
    ],


    "expert":
        [  # –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        {
            "question": "–ß—Ç–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–±–µ, –Ω–æ –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑—É—é—Ç—Å—è —ç—Ç–∏–º —á–∞—â–µ?",
            "options": ["–ò–º—è", "–¢–µ–ª–µ—Ñ–æ–Ω", "–ö–ª—é—á–∏", "–í—Ä–µ–º—è", "–†–µ—á—å"],
            "answer": "–ò–º—è"},

        {
            "question": "–ë–µ–∑ —è–∑—ã–∫–∞, –∞ –≥–æ–≤–æ—Ä–∏—Ç. –ß—Ç–æ —ç—Ç–æ?",
            "options": ["–†–µ–∫–∞", "–≠—Ö–æ", "–†–∞–¥–∏–æ", "–ö–æ–ª–æ–∫–æ–ª", "–í–µ—Ç–µ—Ä"],
            "answer": "–≠—Ö–æ"
        },
        {
            "question": "–ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤ —Ä—É–∫–∞—Ö, –Ω–æ –Ω–µ–ª—å–∑—è –ø–æ—Ç—Ä–æ–≥–∞—Ç—å?",
            "options": ["–ú–µ—á—Ç—É", "–ú—ã—Å–ª—å", "–¢–µ–Ω—å", "–û–≥–æ–Ω—å", "–í–æ–∑–¥—É—Ö"],
            "answer": "–ú–µ—á—Ç—É"
        },
        {
            "question": "–ß—Ç–æ –≤—Å–µ–≥–¥–∞ —Ä–∞—Å—Ç–µ—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è?",
            "options": ["–í–æ–∑—Ä–∞—Å—Ç", "–î–µ—Ä–µ–≤–æ", "–ó–Ω–∞–Ω–∏—è", "–†–µ–∫–∞", "–ì–æ—Ä–∞"],
            "answer": "–í–æ–∑—Ä–∞—Å—Ç"
        },
        {
            "question": "–ß—Ç–æ –º–æ–∂–µ—Ç –±–µ–∂–∞—Ç—å, –Ω–æ –Ω–æ–≥ –Ω–µ –∏–º–µ–µ—Ç?",
            "options": ["–†–µ–∫–∞", "–ß–∞—Å—ã", "–¢–µ–Ω—å", "–û–≥–æ–Ω—å", "–°–æ–±–∞–∫–∞"],
            "answer": "–†–µ–∫–∞"
        },
        {
            "question": "–ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º–æ–∫—Ä—ã–º, –∫–æ–≥–¥–∞ —Å—É—à–∏—Ç?",
            "options": ["–¢–∫–∞–Ω—å", "–†—É–∫–∞", "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ", "–ì—É–±–∫–∞", "–û–≥–æ–Ω—å"],
            "answer": "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ"
        },
        {
            "question": "–ß—Ç–æ –≤—Å–µ–≥–¥–∞ –∏–¥—ë—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ç–æ–∏—Ç –Ω–∞ –º–µ—Å—Ç–µ?",
            "options": ["–†–µ–∫–∞", "–í–µ—Ç–µ—Ä", "–ß–∞—Å—ã", "–í—Ä–µ–º—è", "–¢–µ–Ω—å"],
            "answer": "–í—Ä–µ–º—è"
        },
        {
            "question": "–ß—Ç–æ –º–æ–∂–Ω–æ —Å–ª–æ–º–∞—Ç—å, –Ω–µ –∫–∞—Å–∞—è—Å—å?",
            "options": ["–û–≥–æ–Ω—å", "–ú–µ—á—Ç—É", "–¢–∏—à–∏–Ω—É", "–û–±–µ—â–∞–Ω–∏–µ", "–ö—Ä–∏—Å—Ç–∞–ª–ª"],
            "answer": "–û–±–µ—â–∞–Ω–∏–µ"
        },

    ]
}

# –•—Ä–∞–Ω–µ–Ω–∏–µ –æ—á–∫–æ–≤ –∏–≥—Ä–æ–∫–æ–≤
user_scores = {}


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton("üß© –ó–∞–≥–∞–¥–∫–∞")],
            [KeyboardButton("üèÜ –†–µ–π—Ç–∏–Ω–≥"), KeyboardButton("üìä –ú–æ–π —Å—á—ë—Ç")]
        ],
        resize_keyboard=True
    )


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
def get_difficulty(score):
    if score < 3:
        return "easy"
    elif 3 <= score < 6:
        return "medium"
    elif 6 <= score < 10:
        return "hard"
    else:
        return "expert"  # –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏


# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_scores[user_id] = {"correct": 0, "wrong": 0}
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:", reply_markup=main_menu())


# –ù–æ–≤–∞—è –∑–∞–≥–∞–¥–∫–∞
async def send_riddle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    score = user_scores.get(user_id, {"correct": 0})["correct"]
    difficulty = get_difficulty(score)

    riddle = random.choice(riddles[difficulty])
    context.user_data['answer'] = riddle['answer']

    reply_markup = ReplyKeyboardMarkup(
        [[option] for option in riddle['options']], one_time_keyboard=True, resize_keyboard=True
    )

    await update.message.reply_text(f"[{difficulty.capitalize()}] {riddle['question']}", reply_markup=reply_markup)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
async def check_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answer = update.message.text
    correct_answer = context.user_data.get('answer')

    if user_answer == correct_answer:
        user_scores[user_id]["correct"] += 1
        await update.message.reply_text("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üëç", reply_markup=main_menu())
    else:
        user_scores[user_id]["wrong"] += 1
        await update.message.reply_text(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}.", reply_markup=main_menu())


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
async def check_ranking_changes(context: ContextTypes.DEFAULT_TYPE, user_positions=None):
    sorted_scores = sorted(user_scores.items(), key=lambda x: x[1]["correct"], reverse=True)
    current_positions = {user_id: position for position, (user_id, _) in enumerate(sorted_scores, start=1)}

    for user_id, new_position in current_positions.items():
        previous_position = user_positions.get(user_id)

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ
        if new_position == 1 and previous_position != 1:
            await context.bot.send_message(user_id, "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –ø–æ–¥–Ω—è–ª—Å—è –Ω–∞ 1 –º–µ—Å—Ç–æ!")

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Ç–µ—Ä–µ –ø–æ–∑–∏—Ü–∏–∏
        if previous_position and new_position > previous_position:
            await context.bot.send_message(user_id, "‚ö†Ô∏è –ö—Ç–æ-—Ç–æ –æ–±–æ–≥–Ω–∞–ª —Ç–µ–±—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ. –î–æ–≥–æ–Ω—è–π!")

        user_positions[user_id] = new_position


# –ü–æ–∫–∞–∑ —Ä–µ–π—Ç–∏–Ω–≥–∞
async def show_leaderboard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not user_scores:
        await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ.", reply_markup=main_menu())
        return

    sorted_scores = sorted(user_scores.items(), key=lambda x: x[1]["correct"], reverse=True)
    leaderboard = "üèÜ *–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:*\n\n"

    for i, (user_id, score) in enumerate(sorted_scores, start=1):
        user_name = (await context.bot.get_chat(user_id)).first_name
        leaderboard += f"{i}. {user_name}: {score['correct']} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤\n"


    await update.message.reply_text(leaderboard, parse_mode='Markdown', reply_markup=main_menu())


# –ü–æ–∫–∞–∑ –ª–∏—á–Ω–æ–≥–æ —Å—á—ë—Ç–∞
async def show_score(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    score = user_scores.get(user_id, {"correct": 0, "wrong": 0})
    await update.message.reply_text(
        f"üìä –¢–≤–æ–π —Å—á—ë—Ç:\n‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: {score['correct']}\n‚ùå –û—à–∏–±–æ–∫: {score['wrong']}",
        reply_markup=main_menu()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üß© –ó–∞–≥–∞–¥–∫–∞":
        await send_riddle(update, context)
    elif text == "üèÜ –†–µ–π—Ç–∏–Ω–≥":
        await show_leaderboard(update, context)
    elif text == "üìä –ú–æ–π —Å—á—ë—Ç":
        await show_score(update, context)
    else:
        await check_answer(update, context)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    TOKEN = '7973384839:AAHtI2UJrzNnRwWTJZo_-xCQdd1BcZkwLy4'
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))



